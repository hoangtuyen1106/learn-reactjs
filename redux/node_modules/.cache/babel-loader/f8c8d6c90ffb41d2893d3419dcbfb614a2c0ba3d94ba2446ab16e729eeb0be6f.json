{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst initialAuthState = {\n  isAuthentication: false\n};\nconst authSlice = createSlice({\n  name: \"authentication\",\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthentication = true;\n    },\n    logout(state) {\n      state.isAuthentication = false;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggleCounter","initialAuthState","isAuthentication","authSlice","login","logout","store","reducer","auth","counterActions","actions","authActions"],"sources":["D:/Reactjs/redux/src/store/index.js"],"sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst initialCounterState = { counter: 0, showCounter: true };\r\nconst counterSlice = createSlice({\r\n   name: \"counter\",\r\n   initialState: initialCounterState,\r\n   reducers: {\r\n      increment(state) {\r\n         state.counter++;\r\n      },\r\n      decrement(state) {\r\n         state.counter--;\r\n      },\r\n      increase(state, action) {\r\n         state.counter = state.counter + action.payload;\r\n      },\r\n      toggleCounter(state) {\r\n         state.showCounter = !state.showCounter;\r\n      },\r\n   },\r\n});\r\n\r\nconst initialAuthState = {\r\n   isAuthentication: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n   name: \"authentication\",\r\n   initialState: initialAuthState,\r\n   reducers: {\r\n      login(state) {\r\n         state.isAuthentication = true;\r\n      },\r\n      logout(state) {\r\n         state.isAuthentication = false;\r\n      },\r\n   },\r\n});\r\n\r\nconst store = configureStore({\r\n   reducer: { counter: counterSlice.reducer, auth: authSlice.reducer },\r\n});\r\n\r\nexport const counterActions = counterSlice.actions;\r\nexport const authActions= authSlice.actions;\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAE9D,MAAMC,mBAAmB,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAC7D,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC9BM,IAAI,EAAE,SAAS;EACfC,YAAY,EAAEL,mBAAmB;EACjCM,QAAQ,EAAE;IACPC,SAASA,CAACC,KAAK,EAAE;MACdA,KAAK,CAACP,OAAO,EAAE;IAClB,CAAC;IACDQ,SAASA,CAACD,KAAK,EAAE;MACdA,KAAK,CAACP,OAAO,EAAE;IAClB,CAAC;IACDS,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACrBH,KAAK,CAACP,OAAO,GAAGO,KAAK,CAACP,OAAO,GAAGU,MAAM,CAACC,OAAO;IACjD,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAE;MAClBA,KAAK,CAACN,WAAW,GAAG,CAACM,KAAK,CAACN,WAAW;IACzC;EACH;AACH,CAAC,CAAC;AAEF,MAAMY,gBAAgB,GAAG;EACtBC,gBAAgB,EAAE;AACrB,CAAC;AAED,MAAMC,SAAS,GAAGlB,WAAW,CAAC;EAC3BM,IAAI,EAAE,gBAAgB;EACtBC,YAAY,EAAES,gBAAgB;EAC9BR,QAAQ,EAAE;IACPW,KAAKA,CAACT,KAAK,EAAE;MACVA,KAAK,CAACO,gBAAgB,GAAG,IAAI;IAChC,CAAC;IACDG,MAAMA,CAACV,KAAK,EAAE;MACXA,KAAK,CAACO,gBAAgB,GAAG,KAAK;IACjC;EACH;AACH,CAAC,CAAC;AAEF,MAAMI,KAAK,GAAGpB,cAAc,CAAC;EAC1BqB,OAAO,EAAE;IAAEnB,OAAO,EAAEE,YAAY,CAACiB,OAAO;IAAEC,IAAI,EAAEL,SAAS,CAACI;EAAQ;AACrE,CAAC,CAAC;AAEF,OAAO,MAAME,cAAc,GAAGnB,YAAY,CAACoB,OAAO;AAClD,OAAO,MAAMC,WAAW,GAAER,SAAS,CAACO,OAAO;AAE3C,eAAeJ,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}